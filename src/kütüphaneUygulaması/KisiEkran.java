/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package kütüphaneUygulaması;

import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.List;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author enesk
 */
public class KisiEkran extends javax.swing.JFrame {

    /**
     * Creates new form KisiEkran
     */
    MainMenu anaEkran;
    OduncMain oduncEkran;
    
    DefaultTableModel kisiTable = new DefaultTableModel(0, 0);
    String[] baslik ={"Adı ve Soyadı", "E-Posta"," Telefon Numarası"};
    
    String degisecekKisi;
    
    
    public KisiEkran(MainMenu main, OduncMain oMain) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);
        
        button_guncelle.setEnabled(false);
        button_sil.setEnabled(false);
        
        button_guncelle.setEnabled(false);
        button_sil.setEnabled(false);
        
        kisiTable.setColumnIdentifiers(baslik);
        table_kisiler.setModel(kisiTable);
        
        
        anaEkran=main;
        oduncEkran=oMain;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        txt_kisiTelNo = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        txt_kisiMail = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        txt_kisiAdi = new javax.swing.JTextField();
        txt_kisiSoyAdi = new javax.swing.JTextField();
        button_oduncEkran = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        button_guncelle = new javax.swing.JButton();
        button_sil = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        table_kisiler = new javax.swing.JTable();
        button_kisiListele = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txt_ara = new javax.swing.JTextField();
        button_kisiAra = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        txt_kisiTelNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_kisiTelNoMouseClicked(evt);
            }
        });
        txt_kisiTelNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kisiTelNoKeyPressed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel11.setText("Tel No:");

        jLabel6.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel6.setText("Adı:");

        jLabel7.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel7.setText("Soyadı:");

        jButton3.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jButton3.setText("Ekle");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        txt_kisiMail.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_kisiMailMouseClicked(evt);
            }
        });
        txt_kisiMail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kisiMailKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel1.setText("Mail Adresi");

        jLabel10.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 0));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("Yeni Kişi Ekle");

        txt_kisiAdi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_kisiAdiMouseClicked(evt);
            }
        });
        txt_kisiAdi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_kisiAdiActionPerformed(evt);
            }
        });
        txt_kisiAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kisiAdiKeyPressed(evt);
            }
        });

        txt_kisiSoyAdi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_kisiSoyAdiMouseClicked(evt);
            }
        });
        txt_kisiSoyAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kisiSoyAdiKeyPressed(evt);
            }
        });

        button_oduncEkran.setText("Ödünç İşlemleri");
        button_oduncEkran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_oduncEkranActionPerformed(evt);
            }
        });

        jButton2.setText("Anasayfa");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        button_guncelle.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        button_guncelle.setText("Bilgileri Güncelle");
        button_guncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_guncelleActionPerformed(evt);
            }
        });

        button_sil.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        button_sil.setText("Kişiyi Sil");
        button_sil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_silActionPerformed(evt);
            }
        });

        jLabel12.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(153, 0, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("KAYITLI KİŞİLERİ GÖR");

        table_kisiler.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_kisiler.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_kisilerMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table_kisiler);

        button_kisiListele.setText("Kayıtlı Kişilerin Tümünü Listele");
        button_kisiListele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_kisiListeleActionPerformed(evt);
            }
        });

        jLabel2.setText("Ad, Soyad veya E-Posta Giriniz:");

        button_kisiAra.setText("Ara");
        button_kisiAra.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_kisiAraActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(button_oduncEkran, javax.swing.GroupLayout.PREFERRED_SIZE, 135, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(66, 66, 66)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel11))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(txt_kisiTelNo)
                                    .addComponent(txt_kisiAdi)
                                    .addComponent(button_guncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 192, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(99, 99, 99)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel1))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(button_sil, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(txt_kisiMail)
                                    .addComponent(txt_kisiSoyAdi, javax.swing.GroupLayout.DEFAULT_SIZE, 192, Short.MAX_VALUE))
                                .addGap(60, 60, 60)
                                .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 50, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(button_kisiListele, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 94, Short.MAX_VALUE)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_ara, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(button_kisiAra, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_oduncEkran)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(16, 16, 16)
                .addComponent(jLabel10)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_kisiAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_kisiSoyAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_kisiTelNo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txt_kisiMail, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel1)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jButton3)))
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_guncelle)
                    .addComponent(button_sil))
                .addGap(27, 27, 27)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(button_kisiListele)
                    .addComponent(button_kisiAra)
                    .addComponent(txt_ara)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 136, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(98, 98, 98))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_kisiTelNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kisiTelNoMouseClicked
        // TODO add your handling code here:
        if (txt_kisiTelNo.getForeground() == Color.red) {
            txt_kisiTelNo.setText("");
            txt_kisiTelNo.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiTelNoMouseClicked

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        if (regexKontrol()== true && kayıtlıMıKontrol()==true) {
            
           Kisi newk = new Kisi(txt_kisiAdi.getText(), txt_kisiSoyAdi.getText(), txt_kisiTelNo.getText(), txt_kisiMail.getText());     
            JOptionPane.showMessageDialog(null, "Yeni Kişi Kayıt Edildi", "BİLGİ", JOptionPane.INFORMATION_MESSAGE);
            txt_kisiAdi.setText("");
            txt_kisiMail.setText("");
            txt_kisiSoyAdi.setText("");
            txt_kisiTelNo.setText("");
           
            
            if (table_kisiler.getRowCount() > 0) {
            int don = table_kisiler.getRowCount() - 1;
            for (int i = don; i >= 0; i--) {
                kisiTable.removeRow(i);
            }
            }
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU"); 
          EntityManager em = emf.createEntityManager(); 
 
        Query q = em.createQuery("SELECT k FROM Kisiler k"); 
        List<Kisiler> kisiler = q.getResultList();
       
        for(Kisiler k : kisiler) { 
            Vector data = new Vector();
            data.add(k.getAdi()+" "+k.getSoyadi());
            data.add(k.getPosta());
            data.add(k.getTelefon());
            kisiTable.addRow(data);
        }
        em.close();
        emf.close();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void txt_kisiMailMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kisiMailMouseClicked
        // TODO add your handling code here:
        if (txt_kisiMail.getForeground() == Color.red) {
            txt_kisiMail.setText("");
            txt_kisiMail.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiMailMouseClicked

    private void txt_kisiAdiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kisiAdiMouseClicked
        // TODO add your handling code here:
        if (txt_kisiAdi.getForeground() == Color.red) {
            txt_kisiAdi.setText("");
            txt_kisiAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiAdiMouseClicked

    private void txt_kisiAdiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_kisiAdiActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_kisiAdiActionPerformed

    private void txt_kisiSoyAdiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kisiSoyAdiMouseClicked
        // TODO add your handling code here:
        if (txt_kisiSoyAdi.getForeground() == Color.red) {
            txt_kisiSoyAdi.setText("");
            txt_kisiSoyAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiSoyAdiMouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        anaEkran.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void button_oduncEkranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_oduncEkranActionPerformed
        // TODO add your handling code here:
        oduncEkran.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_button_oduncEkranActionPerformed

    private void button_kisiListeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_kisiListeleActionPerformed
        // TODO add your handling code here:
        if (table_kisiler.getRowCount() > 0) {
            int don = table_kisiler.getRowCount() - 1;
            for (int i = don; i >= 0; i--) {
                kisiTable.removeRow(i);
            }
            }
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU"); 
        EntityManager em = emf.createEntityManager(); 
 
        Query q = em.createQuery("SELECT k FROM Kisiler k"); 
        List<Kisiler> kisiler = q.getResultList();
       
        for(Kisiler k : kisiler) { 
            Vector data = new Vector();
            data.add(k.getAdi()+" "+k.getSoyadi());
            data.add(k.getPosta());
            data.add(k.getTelefon());
            kisiTable.addRow(data);
        }
        em.close();
        emf.close();
//            if (table_kisiler.getRowCount() > 0) {
//            int don = table_kisiler.getRowCount() - 1;
//            for (int i = don; i >= 0; i--) {
//                kisiTable.removeRow(i);
//            }
//            }
//        
//        for (Kisi kisi : Kisi.kisiler) {
//            Vector data = new Vector();
//            data.add(kisi.adi+" "+kisi.soyAdi);
//            data.add(kisi.ePosta);
//            data.add(kisi.telNo);
//            kisiTable.addRow(data);
//        }
    }//GEN-LAST:event_button_kisiListeleActionPerformed

    private void button_kisiAraActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_kisiAraActionPerformed
        // TODO add your handling code here:
        
        if (table_kisiler.getRowCount() > 0) {
            int don = table_kisiler.getRowCount() - 1;
            for (int i = don; i >= 0; i--) {
                kisiTable.removeRow(i);
            }
            }
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU"); 
        EntityManager em = emf.createEntityManager(); 
 
        Query q = em.createQuery("SELECT k FROM Kisiler k"); 
        List<Kisiler> kisiler = q.getResultList();
       
        for(Kisiler k : kisiler) {
            if (k.getAdi().equals(txt_ara.getText()) || k.getSoyadi().equals(txt_ara.getText()) || k.getPosta().equals(txt_ara.getText())) {
            Vector data = new Vector();
            data.add(k.getAdi()+" "+k.getSoyadi());
            data.add(k.getPosta());
            data.add(k.getTelefon());
            kisiTable.addRow(data);
            }
        }
        em.close();
        emf.close();
        
//            for (Kisi kisi : Kisi.kisiler) {
//            if (txt_ara.getText().equals(kisi.adi) || txt_ara.getText().equals(kisi.soyAdi) || txt_ara.getText().equals(kisi.ePosta)) {
//                Vector data = new Vector();
//                data.add(kisi.adi+" "+kisi.soyAdi);
//                data.add(kisi.ePosta);
//                data.add(kisi.telNo);
//                kisiTable.addRow(data);
//            }
//        }
    }//GEN-LAST:event_button_kisiAraActionPerformed

    private void table_kisilerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_kisilerMouseClicked
        // TODO add your handling code here:
        
        txt_kisiAdi.setForeground(Color.BLACK);
        txt_kisiMail.setForeground(Color.BLACK);
        txt_kisiSoyAdi.setForeground(Color.BLACK);
        txt_kisiTelNo.setForeground(Color.BLACK);
        
        
        if (table_kisiler.getSelectedRow()>=0) {
        
        button_guncelle.setEnabled(true);
        button_sil.setEnabled(true);
        
        String degisecekK = table_kisiler.getValueAt(table_kisiler.getSelectedRow(), 1).toString();
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU"); 
        EntityManager em = emf.createEntityManager(); 
 
        Query q = em.createQuery("SELECT k FROM Kisiler k"); 
        List<Kisiler> kisiler = q.getResultList();
       
        for(Kisiler k : kisiler) {
            if (k.getPosta().equals(degisecekK)) {
            txt_kisiAdi.setText(k.getAdi());
            txt_kisiMail.setText(k.getPosta());
            txt_kisiSoyAdi.setText(k.getSoyadi());
            txt_kisiTelNo.setText(k.getTelefon());
            break;
            }
        }
        em.close();
        emf.close();
        degisecekKisi= degisecekK;
        
//        txt_kisiAdi.setText(degisecekKisi.adi);
//        txt_kisiSoyAdi.setText(degisecekKisi.soyAdi);
//        txt_kisiMail.setText(degisecekKisi.ePosta);
//        txt_kisiTelNo.setText(degisecekKisi.telNo);
        }
    }//GEN-LAST:event_table_kisilerMouseClicked

    private void button_guncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_guncelleActionPerformed
        // TODO add your handling code here:
        
        boolean varMi = false;
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU"); 
        EntityManager em = emf.createEntityManager(); 
 
        Query q = em.createQuery("SELECT k FROM Kisiler k"); 
        List<Kisiler> kisiler = q.getResultList();
        for(Kisiler k : kisiler) { 
            if (!k.getPosta().equals(degisecekKisi)) {
                if (k.getPosta().equals(txt_kisiMail.getText())) {
                    varMi=true;
                }
            }
        }
        if (varMi==false && regexKontrol()==true) {
        q= em.createQuery("UPDATE Kisiler k SET k.adi=:adi, k.posta=:posta, k.soyadi=:soyadi, k.telefon=:tel where k.posta=:postara");
        q.setParameter("adi",txt_kisiAdi.getText());
        q.setParameter("posta",txt_kisiMail.getText());
        q.setParameter("soyadi",txt_kisiSoyAdi.getText());
        q.setParameter("tel",txt_kisiTelNo.getText());
        q.setParameter("postara",degisecekKisi );             
                em.getTransaction().begin();
                q.executeUpdate();
                em.getTransaction().commit();
                    em.close();
         emf.close();
         JOptionPane.showMessageDialog(null, "Kişi Bilgileri Güncellendi !", "UYARI!", JOptionPane.INFORMATION_MESSAGE);
        txt_kisiAdi.setText("");
        txt_kisiMail.setText("");
        txt_kisiSoyAdi.setText("");
        txt_kisiTelNo.setText("");
            }

         else {
            JOptionPane.showMessageDialog(null, "Aynı E-Posta Adresine Sahip Farklı Bir Kullanıcı Zaten Var", "UYARI!", JOptionPane.WARNING_MESSAGE);
        txt_kisiMail.setText(degisecekKisi);
        }
        
        if (table_kisiler.getRowCount() > 0) {
            int don = table_kisiler.getRowCount() - 1;
            for (int i = don; i >= 0; i--) {
                kisiTable.removeRow(i);
            }
            }
     
        for(Kisiler k : kisiler) { 
            Vector data = new Vector();
            data.add(k.getAdi()+" "+k.getSoyadi());
            data.add(k.getPosta());
            data.add(k.getTelefon());
            kisiTable.addRow(data);
        }
        em.close();
        emf.close();
        
//        for (Kisi kisi : Kisi.kisiler) {
//            if (degisecekKisi != kisi) {
//                if (kisi.ePosta.equals(txt_kisiMail.getText())) {
//                    varMi = true;
//                    break;
//                }
//            }
//        }
//        if (regexKontrol()==true && varMi==false) {
//        degisecekKisi.adi=txt_kisiAdi.getText();
//        degisecekKisi.soyAdi=txt_kisiSoyAdi.getText();
//        degisecekKisi.ePosta=txt_kisiMail.getText();
//        degisecekKisi.telNo=txt_kisiTelNo.getText();
//        JOptionPane.showMessageDialog(null, "Değişiklik Yapıldı", "Değiştirildi", JOptionPane.INFORMATION_MESSAGE);
//        if (table_kisiler.getRowCount() > 0) {
//            int don = table_kisiler.getRowCount() - 1;
//            for (int i = don; i >= 0; i--) {
//                kisiTable.removeRow(i);
//            }
//            }
//        for (Kisi kisi : Kisi.kisiler) {
//            Vector data = new Vector();
//            data.add(kisi.adi+" "+kisi.soyAdi);
//            data.add(kisi.ePosta);
//            data.add(kisi.telNo);
//            kisiTable.addRow(data);
//        }
//        }
//        else if (varMi==true) {
//        JOptionPane.showMessageDialog(null, "Aynı E-Posta Adresine Sahip Farklı Bir Kullanıcı Zaten Var", "UYARI!", JOptionPane.WARNING_MESSAGE);  
//        }
    }//GEN-LAST:event_button_guncelleActionPerformed

    private void button_silActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_silActionPerformed
        // TODO add your handling code here:
        int yesNo = JOptionPane.showConfirmDialog(this, "Kisi Silinsin Mi?", "Emin misin?", JOptionPane.YES_NO_OPTION);
        if (yesNo == 0) {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
            EntityManager em = emf.createEntityManager();
            
             Query q = em.createQuery("DELETE FROM Kisiler k WHERE k.posta = :name");
             q.setParameter("name", degisecekKisi);
             
             em.getTransaction().begin();
             q.executeUpdate(); 
             em.getTransaction().commit();
             
              
            
//            Kisi.kisiler.remove(degisecekKisi);
//            txt_kisiAdi.setText("");
//            txt_kisiMail.setText("");
//            txt_kisiSoyAdi.setText("");
//            txt_kisiTelNo.setText("");

            if (table_kisiler.getRowCount() > 0) {
            int don = table_kisiler.getRowCount() - 1;
            for (int i = don; i >= 0; i--) {
                kisiTable.removeRow(i);
            }
        }
            if (table_kisiler.getRowCount()>=1) {
            Query qa = em.createQuery("SELECT k FROM Kisiler k"); 
            List<Kisiler> kisiler = q.getResultList();
            
                for(Kisiler k : kisiler) { 
            Vector data = new Vector();
            data.add(k.getAdi()+" "+k.getSoyadi());
            data.add(k.getPosta());
            data.add(k.getTelefon());
            kisiTable.addRow(data);
                }
    }
        
        em.close(); 
             emf.close();
            
//            for (Kisi kisi : Kisi.kisiler) {
//            Vector data = new Vector();
//            data.add(kisi.adi+" "+kisi.soyAdi);
//            data.add(kisi.ePosta);
//            data.add(kisi.telNo);
//            kisiTable.addRow(data);
//        }
            
            
        }
        
    }//GEN-LAST:event_button_silActionPerformed

    private void txt_kisiAdiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kisiAdiKeyPressed
        // TODO add your handling code here:
                if (txt_kisiAdi.getForeground() == Color.red) {
            txt_kisiAdi.setText("");
            txt_kisiAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiAdiKeyPressed

    private void txt_kisiTelNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kisiTelNoKeyPressed
        // TODO add your handling code here:
                if (txt_kisiTelNo.getForeground() == Color.red) {
            txt_kisiTelNo.setText("");
            txt_kisiTelNo.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiTelNoKeyPressed

    private void txt_kisiSoyAdiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kisiSoyAdiKeyPressed
        // TODO add your handling code here:
                if (txt_kisiSoyAdi.getForeground() == Color.red) {
            txt_kisiSoyAdi.setText("");
            txt_kisiSoyAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiSoyAdiKeyPressed

    private void txt_kisiMailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kisiMailKeyPressed
        // TODO add your handling code here:
                if (txt_kisiMail.getForeground() == Color.red) {
            txt_kisiMail.setText("");
            txt_kisiMail.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kisiMailKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KisiEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KisiEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KisiEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KisiEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
       // java.awt.EventQueue.invokeLater(new Runnable() {
         //   public void run() {
           //     new KisiEkran().setVisible(true);
            //}
        //});
    }
    
    
    boolean regexKontrol(){
        boolean eklensinMi=true;

        
        String kAdiDesen = "[\\W\\d]";
        String ePostaDesen = "[\\w]+@[\\w]+\\.[\\w]+";
        String telNoDesen = "[\\d]{11}";
        Pattern pattern = Pattern.compile(kAdiDesen);
        
        String adi = txt_kisiAdi.getText();
        Matcher matcher = pattern.matcher(adi);

        if (matcher.find() || adi.isEmpty() == true) {
            txt_kisiAdi.setText("Geçerli Bir Ad Giriniz");
            txt_kisiAdi.setForeground(Color.red);
            eklensinMi = false;
        }

        String soyAdi = txt_kisiSoyAdi.getText();
        matcher = pattern.matcher(soyAdi);

        if (matcher.find() || soyAdi.isEmpty() == true) {
            txt_kisiSoyAdi.setText("Geçerli Bir Soyad Giriniz");
            txt_kisiSoyAdi.setForeground(Color.red);
            eklensinMi = false;
        }

        String ePosta = txt_kisiMail.getText();
        pattern = Pattern.compile(ePostaDesen);
        matcher = pattern.matcher(ePosta);

        if (!matcher.find() || ePosta.isEmpty() == true) {
            txt_kisiMail.setText("Geçerli Bir E-Posta Giriniz");
            txt_kisiMail.setForeground(Color.red);
            eklensinMi = false;
        }

        String telNo = txt_kisiTelNo.getText();
        pattern = Pattern.compile(telNoDesen);
        matcher = pattern.matcher(telNo);

        if (!matcher.find() || telNo.isEmpty() == true) {
            txt_kisiTelNo.setText("Geçerli Bir Telefon Numarası Giriniz");
            txt_kisiTelNo.setForeground(Color.red);
            eklensinMi = false;
        }
        
        return eklensinMi;
    }
    boolean kayıtlıMıKontrol() {
        boolean eklensinMi = true;
        for (Kisi kisi : Kisi.kisiler) {
            if (txt_kisiMail.getText().equals(kisi.ePosta)) {
                eklensinMi = false;
                JOptionPane.showMessageDialog(null, "Girdiğiniz Mail Adresi Zaten Farklı Bir Üye İçin Kayıtlı", "UYARI!", JOptionPane.WARNING_MESSAGE);
                txt_kisiMail.setText("");
                break;
            }
        }
        return eklensinMi;
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_guncelle;
    private javax.swing.JButton button_kisiAra;
    private javax.swing.JButton button_kisiListele;
    private javax.swing.JButton button_oduncEkran;
    private javax.swing.JButton button_sil;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable table_kisiler;
    private javax.swing.JTextField txt_ara;
    private javax.swing.JTextField txt_kisiAdi;
    private javax.swing.JTextField txt_kisiMail;
    private javax.swing.JTextField txt_kisiSoyAdi;
    private javax.swing.JTextField txt_kisiTelNo;
    // End of variables declaration//GEN-END:variables
}
