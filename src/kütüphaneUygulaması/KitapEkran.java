/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choorse Tools | Templates
 * and open the template in the editor.
 */
package kütüphaneUygulaması;

import java.awt.Color;
import java.util.List;
import java.util.Vector;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.persistence.EntityManager;
import javax.persistence.EntityManagerFactory;
import javax.persistence.Persistence;
import javax.persistence.Query;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author enesk
 */
public class KitapEkran extends javax.swing.JFrame {

    /**
     * Creates new form KitapEkran
     */
    DefaultTableModel kitapListModel = new DefaultTableModel(0, 0);
    String[] baslik = {"Barkod No", "Kitap Adı", "Yazar", "Sayfa Sayısı"};

    int degisecekKitap;

    MainMenu mainMenü;

    public KitapEkran(MainMenu anaEkran) {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setResizable(false);

        mainMenü = anaEkran;

        button_kitapGüncelle.setEnabled(false);
        button_kitapSil.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        txt_barkodNo = new javax.swing.JTextField();
        txt_kitapAdi = new javax.swing.JTextField();
        txt_yazarAdi = new javax.swing.JTextField();
        txt_yazarSoyadi = new javax.swing.JTextField();
        button_kitapGüncelle = new javax.swing.JButton();
        button_kitapSil = new javax.swing.JButton();
        button_kitapEkle = new javax.swing.JButton();
        txt_sayfaSayisi = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_ara = new javax.swing.JTextField();
        button_ara = new javax.swing.JButton();
        button_listele = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        table_kitapListesi = new javax.swing.JTable();
        jLabel10 = new javax.swing.JLabel();

        jLabel6.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel6.setText("Yazar Adı:");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane2.setViewportView(jTable2);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel2.setText("Kitap Adı:");

        jLabel3.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel3.setText("Yazar Adı:");

        jLabel4.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel4.setText("Sayfa Sayısı:");

        jLabel5.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel5.setText("Barkod NO:");

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(153, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Kütüphaneye Kitap Ekle");

        jButton1.setText("Anasayfa");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        txt_barkodNo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_barkodNoMouseClicked(evt);
            }
        });
        txt_barkodNo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_barkodNoActionPerformed(evt);
            }
        });
        txt_barkodNo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_barkodNoKeyPressed(evt);
            }
        });

        txt_kitapAdi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_kitapAdiMouseClicked(evt);
            }
        });
        txt_kitapAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_kitapAdiKeyPressed(evt);
            }
        });

        txt_yazarAdi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_yazarAdiMouseClicked(evt);
            }
        });
        txt_yazarAdi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_yazarAdiKeyPressed(evt);
            }
        });

        txt_yazarSoyadi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_yazarSoyadiMouseClicked(evt);
            }
        });
        txt_yazarSoyadi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_yazarSoyadiKeyPressed(evt);
            }
        });

        button_kitapGüncelle.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        button_kitapGüncelle.setText("Kitap Bilgilerini Güncelle");
        button_kitapGüncelle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_kitapGüncelleActionPerformed(evt);
            }
        });

        button_kitapSil.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        button_kitapSil.setText("Kitabı Sil");
        button_kitapSil.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_kitapSilActionPerformed(evt);
            }
        });

        button_kitapEkle.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        button_kitapEkle.setText("Kitap Ekle");
        button_kitapEkle.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_kitapEkleActionPerformed(evt);
            }
        });

        txt_sayfaSayisi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_sayfaSayisiMouseClicked(evt);
            }
        });
        txt_sayfaSayisi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_sayfaSayisiKeyPressed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel7.setText("Yazar Soyadı:");

        jLabel9.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel9.setText("Kitap, Yazar Adı veya Barkod No Giriniz:");

        button_ara.setText("Ara");
        button_ara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_araActionPerformed(evt);
            }
        });

        button_listele.setText("Tüm Kitapları Listele");
        button_listele.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                button_listeleActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Dialog", 1, 14)); // NOI18N
        jLabel8.setText("Kitap Listele");

        table_kitapListesi.setAutoCreateColumnsFromModel(false);
        table_kitapListesi.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        table_kitapListesi.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                table_kitapListesiMouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(table_kitapListesi);

        jLabel10.setFont(new java.awt.Font("Corbel", 1, 14)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(153, 0, 0));
        jLabel10.setText("Silme Ve Düzenleme İçin Listeden Bir Kitap Seçilmeli");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel9)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txt_ara, javax.swing.GroupLayout.PREFERRED_SIZE, 246, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(button_ara, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(button_listele, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel8))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txt_barkodNo, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_yazarAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_yazarSoyadi, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txt_kitapAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                                        .addComponent(button_kitapEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addComponent(button_kitapGüncelle)
                                .addGap(18, 18, 18)
                                .addComponent(button_kitapSil, javax.swing.GroupLayout.PREFERRED_SIZE, 169, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(15, 15, 15))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(txt_sayfaSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 224, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(142, 142, 142)
                                .addComponent(jLabel10)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(192, 192, 192)
                                .addComponent(jLabel1)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jButton1))
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_barkodNo, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_kitapAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_yazarAdi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3))
                        .addGap(8, 8, 8)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txt_yazarSoyadi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel7))
                        .addGap(8, 8, 8))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(button_kitapEkle, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button_kitapGüncelle, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(button_kitapSil, javax.swing.GroupLayout.PREFERRED_SIZE, 139, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(txt_sayfaSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jLabel4))
                    .addGroup(layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel10)))
                .addGap(30, 30, 30)
                .addComponent(jLabel8)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(txt_ara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(button_ara)
                    .addComponent(button_listele))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 165, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_barkodNoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_barkodNoMouseClicked
        // TODO add your handling code here:
        if (txt_barkodNo.getForeground() == Color.red) {
            txt_barkodNo.setText("");
            txt_barkodNo.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_barkodNoMouseClicked

    private void txt_barkodNoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_barkodNoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_barkodNoActionPerformed

    private void txt_kitapAdiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_kitapAdiMouseClicked
        // TODO add your handling code here:
        if (txt_kitapAdi.getForeground() == Color.red) {
            txt_kitapAdi.setText("");
            txt_kitapAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kitapAdiMouseClicked

    private void txt_yazarAdiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_yazarAdiMouseClicked
        // TODO add your handling code here:
        if (txt_yazarAdi.getForeground() == Color.red) {
            txt_yazarAdi.setText("");
            txt_yazarAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_yazarAdiMouseClicked

    private void txt_yazarSoyadiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_yazarSoyadiMouseClicked
        // TODO add your handling code here:
        if (txt_yazarSoyadi.getForeground() == Color.red) {
            txt_yazarSoyadi.setText("");
            txt_yazarSoyadi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_yazarSoyadiMouseClicked

    private void txt_sayfaSayisiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_sayfaSayisiMouseClicked
        // TODO add your handling code here:
        if (txt_sayfaSayisi.getForeground() == Color.red) {
            txt_sayfaSayisi.setText("");
            txt_sayfaSayisi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_sayfaSayisiMouseClicked

    private void button_kitapEkleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_kitapEkleActionPerformed
        // TODO add your handling code here:
        if (regexKontrol() == true && kayıtlıMıKontrol() == true) {
            Kitap kitap = new Kitap(txt_barkodNo.getText(), txt_kitapAdi.getText(), txt_yazarAdi.getText(), txt_yazarSoyadi.getText(), txt_sayfaSayisi.getText());
            textTemizle();
            JOptionPane.showMessageDialog(null, "Kitap Başarıyla Kütüphaneye Eklendi", "Kitap Ekleme", JOptionPane.INFORMATION_MESSAGE);
            listeTemizle();
            listele();
        }
    }//GEN-LAST:event_button_kitapEkleActionPerformed

    private void button_listeleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_listeleActionPerformed
        // TODO add your handling code here:
        table_kitapListesi.setAutoCreateColumnsFromModel(true);
        table_kitapListesi.setAutoCreateRowSorter(true);

        kitapListModel.setColumnIdentifiers(baslik);
        table_kitapListesi.setModel(kitapListModel);

        listeTemizle();

        listele();
    }//GEN-LAST:event_button_listeleActionPerformed

    private void button_araActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_araActionPerformed
        // TODO add your handling code here:
        table_kitapListesi.setAutoCreateColumnsFromModel(true);
        table_kitapListesi.setAutoCreateRowSorter(true);

        kitapListModel.setColumnIdentifiers(baslik);
        table_kitapListesi.setModel(kitapListModel);

        listeTemizle();

        String ara = txt_ara.getText();
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
        EntityManager em = emf.createEntityManager();
        
        Query q = em.createQuery("SELECT k FROM KiTaplar k");
        List<KiTaplar> kitaplar = q.getResultList();
        
        for (KiTaplar k : kitaplar) {
            if (k.getAdi().equals(ara) || k.getBarkodno()==Integer.parseInt(ara) || k.getYazaradi().equals(ara) || k.getYazarsoyadi().equals(ara)) {
              Vector data = new Vector();
            data.add(k.getBarkodno().toString());
            data.add(k.getAdi());
            data.add(k.getYazaradi() + " " + k.getYazarsoyadi());
            data.add(k.getSayfasayisi().toString());
            kitapListModel.addRow(data);
        }
        }
        em.close();
        emf.close();

//        for (Kitap kitap : Kitap.kitaplar) {
//            if (kitap.adi.equals(ara) || kitap.barkodNo.equals(ara) || kitap.yazarAdi.equals(ara) || kitap.yazarSoyadi.equals(ara)) {
//                Vector data = new Vector();
//                data.add(kitap.barkodNo);
//                data.add(kitap.adi);
//                data.add(kitap.yazarAdi + " " + kitap.yazarSoyadi);
//                data.add(kitap.sayfaSayisi);
//                kitapListModel.addRow(data);
//                break;
//            }
//        }
    }//GEN-LAST:event_button_araActionPerformed

    private void table_kitapListesiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_table_kitapListesiMouseClicked
        // TODO add your handling code here:

        txt_barkodNo.setForeground(Color.BLACK);
        txt_kitapAdi.setForeground(Color.BLACK);
        txt_sayfaSayisi.setForeground(Color.BLACK);
        txt_yazarAdi.setForeground(Color.BLACK);
        txt_yazarSoyadi.setForeground(Color.BLACK);

        if (table_kitapListesi.getSelectedRow() >= 0) {
            button_kitapGüncelle.setEnabled(true);
            button_kitapSil.setEnabled(true);

            degisecekKitap = Integer.parseInt(table_kitapListesi.getValueAt(table_kitapListesi.getSelectedRow(), 0).toString());
            
            

//            for (Kitap kitap : Kitap.kitaplar) {
//                if (barkod.equals(kitap.barkodNo)) {
//                    degisecekKitap = kitap;
//                    break;
//                }
//            }
EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
        EntityManager em = emf.createEntityManager();
        
        Query q = em.createQuery("SELECT k FROM KiTaplar k");
        List<KiTaplar> kitaplar = q.getResultList();
        
        for (KiTaplar k : kitaplar) {
            if (k.getBarkodno()==degisecekKitap) {
            txt_barkodNo.setText(String.valueOf(k.getBarkodno()));
            txt_kitapAdi.setText(k.getAdi());
            txt_yazarAdi.setText(k.getYazaradi());
            txt_yazarSoyadi.setText(k.getYazarsoyadi());
            txt_sayfaSayisi.setText(String.valueOf(k.getSayfasayisi()));
            break;
            }
        }
            
        }
    }//GEN-LAST:event_table_kitapListesiMouseClicked

    private void button_kitapGüncelleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_kitapGüncelleActionPerformed
        // TODO add your handling code here:
        boolean varMi=false;
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
        EntityManager em = emf.createEntityManager();
        
        Query q = em.createQuery("SELECT k FROM KiTaplar k");
        List<KiTaplar> kitaplar = q.getResultList();
        
        for (KiTaplar k : kitaplar) {
            if (!(k.getBarkodno()==degisecekKitap)) {
                if (k.getBarkodno()==Integer.parseInt(txt_barkodNo.getText())) {
                    varMi=true;
                }
            }
        }
//        for (Kitap kitap : Kitap.kitaplar) {
//            if (degisecekKitap != kitap) {
//                if (kitap.barkodNo.equals(txt_barkodNo.getText())) {
//                    varMi = true;
//                    break;
//                }
//            }
//        }
        if (regexKontrol() == true && varMi == false) {
            q=em.createQuery("UPDATE KiTaplar k SET k.adi=:adi, k.barkodno=:barkod, k.yazaradi=:yazaradi, k.yazarsoyadi=:yazarsoy WHERE k.barkodno=:barkod");
            q.setParameter("adi", txt_kitapAdi.getText());
            q.setParameter("barkod", txt_barkodNo.getText());
            q.setParameter("yazarsoy", txt_yazarSoyadi.getText());
            q.setParameter("yazaradi", txt_yazarAdi.getText());
            em.getTransaction().begin();
            q.executeUpdate();
            em.getTransaction().commit();
            
//            degisecekKitap.adi = txt_kitapAdi.getText();
//            degisecekKitap.barkodNo = txt_barkodNo.getText();
//            degisecekKitap.sayfaSayisi = txt_sayfaSayisi.getText();
//            degisecekKitap.yazarAdi = txt_yazarAdi.getText();
//            degisecekKitap.yazarSoyadi = txt_yazarSoyadi.getText();
            JOptionPane.showMessageDialog(null, "Değişiklik Yapıldı", "Değiştirildi", JOptionPane.INFORMATION_MESSAGE);
            listeTemizle();
            listele();

        } else if (varMi==true) {
            JOptionPane.showMessageDialog(null, "Aynı Barkod Numarasına Sahip Farklı Bir Kitap Zaten Var", "UYARI!", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_button_kitapGüncelleActionPerformed

    private void button_kitapSilActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_button_kitapSilActionPerformed
        // TODO add your handling code here:
        int yesNo = JOptionPane.showConfirmDialog(this, degisecekKitap + " Barkod Numaralı " +" Kitap Silinsin Mi?", "Emin misin?", JOptionPane.YES_NO_OPTION);
        if (yesNo == 0) {
            EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
            EntityManager em = emf.createEntityManager();
            
             Query q = em.createQuery("DELETE FROM KiTaplar k WHERE k.barkodno = :name");
             q.setParameter("name", degisecekKitap);
             
             em.getTransaction().begin();
             q.executeUpdate(); 
             em.getTransaction().commit();
            textTemizle();
            listeTemizle();
            listele();
        }
    }//GEN-LAST:event_button_kitapSilActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        mainMenü.setVisible(true);
        this.setVisible(false);

    }//GEN-LAST:event_jButton1ActionPerformed

    private void txt_barkodNoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_barkodNoKeyPressed
        // TODO add your handling code here:
        if (txt_barkodNo.getForeground() == Color.red) {
            txt_barkodNo.setText("");
            txt_barkodNo.setForeground(Color.BLACK);
        }

    }//GEN-LAST:event_txt_barkodNoKeyPressed

    private void txt_kitapAdiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_kitapAdiKeyPressed
        // TODO add your handling code here:
        if (txt_kitapAdi.getForeground() == Color.red) {
            txt_kitapAdi.setText("");
            txt_kitapAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_kitapAdiKeyPressed

    private void txt_yazarAdiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_yazarAdiKeyPressed
        // TODO add your handling code here:
        if (txt_yazarAdi.getForeground() == Color.red) {
            txt_yazarAdi.setText("");
            txt_yazarAdi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_yazarAdiKeyPressed

    private void txt_yazarSoyadiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_yazarSoyadiKeyPressed
        // TODO add your handling code here:
        if (txt_yazarSoyadi.getForeground() == Color.red) {
            txt_yazarSoyadi.setText("");
            txt_yazarSoyadi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_yazarSoyadiKeyPressed

    private void txt_sayfaSayisiKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_sayfaSayisiKeyPressed
        // TODO add your handling code here:
        if (txt_sayfaSayisi.getForeground() == Color.red) {
            txt_sayfaSayisi.setText("");
            txt_sayfaSayisi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_txt_sayfaSayisiKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(KitapEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(KitapEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(KitapEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(KitapEkran.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        //java.awt.EventQueue.invokeLater(new Runnable() {
        //public void run() {
        // new KitapEkran().setVisible(true);
        //       }
        //});
    }

    boolean regexKontrol() {

        boolean eklensinMi = true;

        String yAdi = txt_yazarAdi.getText();
        String kAdiDesen = "[\\W\\d]";
        String sayiDesen = "[\\d]";
        String barkodDesen = "[\\d]{10}";
        Pattern pattern = Pattern.compile(kAdiDesen);
        Matcher matcher = pattern.matcher(yAdi);

        if (matcher.find() || yAdi.isEmpty() == true) {
            txt_yazarAdi.setText("Geçerli Bir Ad Giriniz");
            txt_yazarAdi.setForeground(Color.red);
            eklensinMi = false;
        }

        String adi = txt_yazarSoyadi.getText();
        matcher = pattern.matcher(adi);

        if (matcher.find() || adi.isEmpty() == true) {
            txt_yazarSoyadi.setText("Geçerli Bir Soyad Giriniz");
            txt_yazarSoyadi.setForeground(Color.red);
            eklensinMi = false;
        }

        if (txt_kitapAdi.getText().isEmpty() == true) {
            txt_kitapAdi.setText("Geçerli Bir Kitap Adı Giriniz");
            txt_kitapAdi.setForeground(Color.red);
            eklensinMi = false;
        }

        String barkod = txt_barkodNo.getText();
        pattern = Pattern.compile(barkodDesen);
        matcher = pattern.matcher(barkod);

        if (!matcher.find() || barkod.isEmpty() == true) {
            txt_barkodNo.setText("Geçerli Bir Barkod Numarası Giriniz");
            txt_barkodNo.setForeground(Color.red);
            eklensinMi = false;
        }

        String sayfaSayisi = txt_sayfaSayisi.getText();
        pattern = Pattern.compile(sayiDesen);
        matcher = pattern.matcher(sayfaSayisi);

        if (!matcher.find() || sayfaSayisi.isEmpty() == true) {
            txt_sayfaSayisi.setText("Geçerli Bir Sayfa Sayısı Giriniz");
            txt_sayfaSayisi.setForeground(Color.red);
            eklensinMi = false;
        }
        return eklensinMi;
    }

    boolean kayıtlıMıKontrol() {
        boolean eklensinMi = true;
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
        EntityManager em = emf.createEntityManager();
        
        Query q = em.createQuery("SELECT k FROM KiTaplar k");
        List<KiTaplar> kitaplar = q.getResultList();
        
        for (KiTaplar k : kitaplar) {
            if (k.getBarkodno()==Integer.parseInt(txt_barkodNo.getText())) {
                eklensinMi=false;
                JOptionPane.showMessageDialog(null, "Aynı barkod nosuna sahip kitap zaten var!", "UYARI!", JOptionPane.WARNING_MESSAGE);
                break;
            }
        }
        em.close();
        emf.close();
        
//        for (Kitap kitap : Kitap.kitaplar) {
//            if (txt_barkodNo.getText().equals(kitap.barkodNo)) {
//                eklensinMi = false;
//                JOptionPane.showMessageDialog(null, "", "sadas", JOptionPane.WARNING_MESSAGE);
//                break;
//            }
//        }
        return eklensinMi;
    }

    void textTemizle() {
        txt_barkodNo.setText("");
        txt_kitapAdi.setText("");
        txt_sayfaSayisi.setText("");
        txt_yazarAdi.setText("");
        txt_yazarSoyadi.setText("");
    }

    void listeTemizle() {
        
kitapListModel.setRowCount(0);
    }

    void listele() {
        
        EntityManagerFactory emf = Persistence.createEntityManagerFactory("asdPU");
        EntityManager em = emf.createEntityManager();
        
        Query q = em.createQuery("SELECT k FROM KiTaplar");
        List<KiTaplar> kitaplar = q.getResultList();
        
        for (KiTaplar k : kitaplar) {
              Vector data = new Vector();
            data.add(k.getBarkodno().toString());
            data.add(k.getAdi());
            data.add(k.getYazaradi() + " " + k.getYazarsoyadi());
            data.add(k.getSayfasayisi().toString());
            kitapListModel.addRow(data);
        }
        em.close();
        emf.close();
//        for (Kitap kitap : Kitap.kitaplar) {
//            Vector data = new Vector();
//            data.add(kitap.barkodNo);
//            data.add(kitap.adi);
//            data.add(kitap.yazarAdi + " " + kitap.yazarSoyadi);
//            data.add(kitap.sayfaSayisi);
//            kitapListModel.addRow(data);
//        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton button_ara;
    private javax.swing.JButton button_kitapEkle;
    private javax.swing.JButton button_kitapGüncelle;
    private javax.swing.JButton button_kitapSil;
    private javax.swing.JButton button_listele;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable table_kitapListesi;
    private javax.swing.JTextField txt_ara;
    private javax.swing.JTextField txt_barkodNo;
    private javax.swing.JTextField txt_kitapAdi;
    private javax.swing.JTextField txt_sayfaSayisi;
    private javax.swing.JTextField txt_yazarAdi;
    private javax.swing.JTextField txt_yazarSoyadi;
    // End of variables declaration//GEN-END:variables
}
